// <auto-generated />
using System.Diagnostics.CodeAnalysis;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UL.Calculator.Data;


namespace UL.Calculator.Data.Migrations
{
    [ExcludeFromCodeCoverage]
    [DbContext(typeof(CalculatorDBContext))]
    partial class CalculatorDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UL.Calculator.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "s.Thompson@ul.com",
                            FirstName = "Simon ",
                            LastName = "Thompson "
                        },
                        new
                        {
                            Id = 2,
                            Email = "s.Gibbens@ul.com",
                            FirstName = "Stephanie",
                            LastName = "Gibbens"
                        },
                        new
                        {
                            Id = 3,
                            Email = "free@free.com",
                            FirstName = "Free",
                            LastName = "User"
                        });
                });

            modelBuilder.Entity("UL.Calculator.Entities.UserLogin", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("UserLogin");

                    b.HasData(
                        new
                        {
                            Username = "s.Thompson@ul.com",
                            Password = "admin",
                            SubscriptionType = "Premium"
                        },
                        new
                        {
                            Username = "s.Gibbens@ul.com",
                            Password = "admin",
                            SubscriptionType = "Standard"
                        },
                        new
                        {
                            Username = "free@free.com",
                            Password = "user",
                            SubscriptionType = "Free"
                        });
                });

            modelBuilder.Entity("UL.Calculator.Entities.UserLogin", b =>
                {
                    b.HasOne("UL.Calculator.Entities.User", "User")
                        .WithOne("LoginInfo")
                        .HasForeignKey("UL.Calculator.Entities.UserLogin", "Username")
                        .HasPrincipalKey("UL.Calculator.Entities.User", "Email")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
